| In this lesson, we'll explore the
| lubridate R package, by Garrett Grolemund
| and Hadley Wickham. According to the
| package authors, "lubridate has a
| consistent, memorable syntax, that makes
| working with dates fun instead of
| frustrating." If you've ever worked with
| dates in R, that statement probably has
| your attention.

| Type Sys.getlocale("LC_TIME") to view
| your time locale.

> Sys.getlocale("LC_TIME")
[1] "English_United States.1252"

> library(lubridate)

> this_day <-  today()
> this_day
[1] "2017-05-16"

> year(this_day)
[1] 2017

|It will be represented as a number, such that 1 = Sunday, 2
| = Monday, 3 = Tuesday, etc. Give it a shot.

> wday(this_day)
[1] 3

> wday(this_day, label = TRUE)
[1] Tues
Levels: Sun < Mon < Tues < Wed < Thurs < Fri < Sat

> this_moment <- now()

> this_moment
[1] "2017-05-16 23:03:42 EDT"

| Just like with dates, we can extract the year, month, day, or day of
| week. However, we can also use hour(), minute(), and second() to
| extract specific time information. Try any of these three new
| functions now to extract one piece of time information from
| this_moment.

> minute(this_moment)
[1] 3

| Fortunately, lubridate offers a variety of functions for parsing
| date-times. These functions take the form of ymd(), dmy(), hms(),
| ymd_hms(), etc., where each letter in the name of the function stands
| for the location of years (y), months (m), days (d), hours (h),
| minutes (m), and/or seconds (s) in the date-time being read in.

> my_date <- ymd("1989-05-17")
> my_date
[1] "1989-05-17"

> class(my_date)
[1] "Date"

> ymd("1989 May 17")
[1] "1989-05-17"

> mdy("March 12, 1975")
[1] "1975-03-12"

> dmy(25081985)
[1] "1985-08-25"

> ymd("192012")
[1] NA

> dt1
[1] "2014-08-23 17:23:02"

> ymd_hms(dt1)
[1] "2014-08-23 17:23:02 UTC"

> hms("03:22:14")
[1] "3H 22M 14S"

> dt2
[1] "2014-05-14" "2014-09-22" "2014-07-11"

> ymd(dt2)
[1] "2014-05-14" "2014-09-22" "2014-07-11"

> update(this_moment, hours = 8, minutes = 34, seconds = 55)
[1] "2017-05-16 08:34:55 EDT"

> this_moment
[1] "2017-05-16 23:03:42 EDT"

> this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)

> this_moment
[1] "2017-05-16 08:34:55 EDT"

| Now, pretend you are in New York City and you are planning to visit a
| friend in Hong Kong. You seem to have misplaced your itinerary, but
| you know that your flight departs New York at 17:34 (5:34pm) the day
| after tomorrow. You also know that your flight is scheduled to arrive
| in Hong Kong exactly 15 hours and 50 minutes after departure.
| Let's reconstruct your itinerary from what you can remember, starting
| with the full date and time of your departure. We will approach this
| by finding the current date in New York, adding 2 full days, then
| setting the time to 17:34.

> nyc <- now("America/New_York")

| For a complete list of valid time zones for use with lubridate, check
| out the following Wikipedia page:
|
| http://en.wikipedia.org/wiki/List_of_tz_database_time_zones

> nyc
[1] "2017-05-16 23:32:27 EDT"

> depart <- nyc + days(2)

> depart
[1] "2017-05-18 23:32:27 EDT"

> depart <- update(depart, hours = 17, minutes = 34)

> depart
[1] "2017-05-18 17:34:27 EDT"


| The arrive variable contains the time that it will be in New York when
| you arrive in Hong Kong. What we really want to know is what time it
| will be in Hong Kong when you arrive, so that your friend knows when
| to meet you.

> arrive <- depart + hours(15) + minutes(50)

> ?with_tz

arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")

> arrive
[1] "2017-05-19 21:24:27 HKT"

> last_time <- mdy("June 17, 2008", tz = "Singapore")

> last_time
[1] "2008-06-17 SGT"

> ?interval

> how_long <- interval(last_time, arrive)

> as.period(how_long)
[1] "8y 11m 2d 21H 24M 27.3682980537415S"

| This is where things get a little tricky. Because of things like leap
| years, leap seconds, and daylight savings time, the length of any
| given minute, day, month, week, or year is relative to when it occurs.
| In contrast, the length of a second is always the same, regardless of
| when it occurs.


instants, intervals, durations, and periods
